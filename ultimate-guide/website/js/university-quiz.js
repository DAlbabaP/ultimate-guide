// ===== –¢–ï–°–¢ "–ü–û–î–•–û–î–ò–¢ –õ–ò –ú–ù–ï –†–ì–ê–£-–ú–°–•–ê?" =====

const UniversityQuiz = {
  // –ë–∞–∑–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ —Ç–µ—Å—Ç–∞
  QUESTIONS: [
    {
      id: 1,
      type: 'single',
      question: '–ö–∞–∫–∞—è —Å—Ñ–µ—Ä–∞ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤–∞—Å –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç?',
      answers: [
        { id: 'a', text: '–°–µ–ª—å—Å–∫–æ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ –∏ –∞–≥—Ä–æ–±–∏–∑–Ω–µ—Å', scores: { agro: 3, tech: 1, eco: 2, vet: 1 } },
        { id: 'b', text: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏', scores: { tech: 3, agro: 1, eco: 1, bio: 2 } },
        { id: 'c', text: '–≠–∫–æ–Ω–æ–º–∏–∫–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', scores: { eco: 3, agro: 1, tech: 1, management: 2 } },
        { id: 'd', text: '–ë–∏–æ–ª–æ–≥–∏—è –∏ —ç–∫–æ–ª–æ–≥–∏—è', scores: { bio: 3, vet: 2, agro: 1, eco: 1 } },
        { id: 'e', text: '–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∏—è –∏ –∑–æ–æ—Ç–µ—Ö–Ω–∏—è', scores: { vet: 3, bio: 2, agro: 1 } }
      ]
    },
    {
      id: 2,
      type: 'single',
      question: '–ì–¥–µ –±—ã –≤—ã –ø—Ä–µ–¥–ø–æ—á–ª–∏ —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞?',
      answers: [
        { id: 'a', text: '–ù–∞ –ø—Ä–∏—Ä–æ–¥–µ, –≤ –ø–æ–ª–µ–≤—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö', scores: { agro: 3, bio: 2, vet: 2 } },
        { id: 'b', text: '–í —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º –æ—Ñ–∏—Å–µ', scores: { eco: 3, management: 2, tech: 1 } },
        { id: 'c', text: '–í –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏', scores: { bio: 3, tech: 2, vet: 1 } },
        { id: 'd', text: '–ù–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ', scores: { tech: 3, agro: 2, eco: 1 } },
        { id: 'e', text: '–í –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–æ–π –∫–ª–∏–Ω–∏–∫–µ', scores: { vet: 3, bio: 1 } }
      ]
    },
    {
      id: 3,
      type: 'single',
      question: '–ö–∞–∫–æ–π —Å—Ç–∏–ª—å –æ–±—É—á–µ–Ω–∏—è –≤–∞–º –±–ª–∏–∂–µ?',
      answers: [
        { id: 'a', text: '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–Ω—è—Ç–∏—è –∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã', scores: { agro: 2, bio: 3, vet: 2, tech: 2 } },
        { id: 'b', text: '–¢–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏–µ –ª–µ–∫—Ü–∏–∏ –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è', scores: { bio: 2, eco: 2, tech: 1 } },
        { id: 'c', text: '–ü—Ä–æ–µ–∫—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –≤ –∫–æ–º–∞–Ω–¥–µ', scores: { management: 3, eco: 2, tech: 2 } },
        { id: 'd', text: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è', scores: { bio: 2, tech: 2, agro: 1 } }
      ]
    },
    {
      id: 4,
      type: 'multiple',
      question: '–ö–∞–∫–∏–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤ —à–∫–æ–ª–µ –≤–∞–º –Ω—Ä–∞–≤–∏–ª–∏—Å—å –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ? (–º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ)',
      answers: [
        { id: 'a', text: '–ë–∏–æ–ª–æ–≥–∏—è', scores: { bio: 2, vet: 2, agro: 1 } },
        { id: 'b', text: '–•–∏–º–∏—è', scores: { bio: 2, tech: 2, agro: 1 } },
        { id: 'c', text: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', scores: { tech: 2, eco: 2 } },
        { id: 'd', text: '–§–∏–∑–∏–∫–∞', scores: { tech: 3, agro: 1 } },
        { id: 'e', text: '–ì–µ–æ–≥—Ä–∞—Ñ–∏—è', scores: { agro: 2, bio: 1, eco: 1 } },
        { id: 'f', text: '–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ', scores: { eco: 2, management: 2 } }
      ]
    },
    {
      id: 5,
      type: 'single',
      question: '–ß—Ç–æ –¥–ª—è –≤–∞—Å –≤–∞–∂–Ω–µ–µ –≤ –±—É–¥—É—â–µ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏?',
      answers: [
        { id: 'a', text: '–ü–æ–º–æ—â—å –ª—é–¥—è–º –∏ –∂–∏–≤–æ—Ç–Ω—ã–º', scores: { vet: 3, bio: 2, agro: 1 } },
        { id: 'b', text: '–í—ã—Å–æ–∫–∏–π –¥–æ—Ö–æ–¥', scores: { eco: 3, management: 2, tech: 1 } },
        { id: 'c', text: '–¢–≤–æ—Ä—á–µ—Å–∫–∞—è —Å–∞–º–æ—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è', scores: { bio: 2, tech: 2, agro: 1 } },
        { id: 'd', text: '–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å', scores: { agro: 2, eco: 2, management: 1 } },
        { id: 'e', text: '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–Ω–Ω–æ–≤–∞—Ü–∏–π', scores: { tech: 3, bio: 2, agro: 1 } }
      ]
    },
    {
      id: 6,
      type: 'single',
      question: '–ö–∞–∫ –≤—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ—Å—å –∫ —Ä–∞–±–æ—Ç–µ —Å –∂–∏–≤–æ—Ç–Ω—ã–º–∏?',
      answers: [
        { id: 'a', text: '–û–±–æ–∂–∞—é –∂–∏–≤–æ—Ç–Ω—ã—Ö, –≥–æ—Ç–æ–≤(–∞) –ø–æ—Å–≤—è—Ç–∏—Ç—å –∏–º –∫–∞—Ä—å–µ—Ä—É', scores: { vet: 3, bio: 1 } },
        { id: 'b', text: '–ù—Ä–∞–≤–∏—Ç—Å—è, –Ω–æ –Ω–µ –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä–µ—Å', scores: { agro: 2, bio: 1 } },
        { id: 'c', text: '–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ –æ—Ç–Ω–æ—à—É—Å—å', scores: { eco: 1, tech: 1, management: 1 } },
        { id: 'd', text: '–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∂–∏–≤–æ—Ç–Ω—ã–º–∏', scores: { tech: 2, eco: 2, management: 2 } }
      ]
    }
  ],

  // –§–∞–∫—É–ª—å—Ç–µ—Ç—ã –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
  FACULTIES: {
    agro: {
      name: '–ê–≥—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—É–ª—å—Ç–µ—Ç',
      description: '–†–∞—Å—Ç–µ–Ω–∏–µ–≤–æ–¥—Å—Ç–≤–æ, –∞–≥—Ä–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, —Å–µ–ª–µ–∫—Ü–∏—è',
      specialties: ['–ê–≥—Ä–æ–Ω–æ–º–∏—è', '–°–µ–ª–µ–∫—Ü–∏—è –∏ –≥–µ–Ω–µ—Ç–∏–∫–∞', '–ê–≥—Ä–æ—Ö–∏–º–∏—è'],
      prospects: '–†–∞–±–æ—Ç–∞ –≤ –∞–≥—Ä–æ—Ö–æ–ª–¥–∏–Ω–≥–∞—Ö, —Å–µ–ª–µ–∫—Ü–∏–æ–Ω–Ω—ã—Ö —Ü–µ–Ω—Ç—Ä–∞—Ö, —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –∞–≥—Ä–æ–±–∏–∑–Ω–µ—Å'
    },
    tech: {
      name: '–§–∞–∫—É–ª—å—Ç–µ—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞',
      description: '–ò–Ω–∂–µ–Ω–µ—Ä–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, —Ç–µ—Ö–Ω–∏–∫–∞, –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è',
      specialties: ['–ê–≥—Ä–æ–∏–Ω–∂–µ–Ω–µ—Ä–∏—è', '–¢–µ—Ö–Ω–æ—Å—Ñ–µ—Ä–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è'],
      prospects: 'IT-–∫–æ–º–ø–∞–Ω–∏–∏, –∏–Ω–∂–µ–Ω–µ—Ä–Ω—ã–µ —Ñ–∏—Ä–º—ã, –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è'
    },
    eco: {
      name: '–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—É–ª—å—Ç–µ—Ç',
      description: '–≠–∫–æ–Ω–æ–º–∏–∫–∞, —Ñ–∏–Ω–∞–Ω—Å—ã, –±—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–∏–π —É—á–µ—Ç',
      specialties: ['–≠–∫–æ–Ω–æ–º–∏–∫–∞', '–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç', '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–∏–π —É—á–µ—Ç'],
      prospects: '–ë–∞–Ω–∫–∏, –∫–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥, –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã, –±–∏–∑–Ω–µ—Å'
    },
    bio: {
      name: '–§–∞–∫—É–ª—å—Ç–µ—Ç –±–∏–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏–∏',
      description: '–ë–∏–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –ø–∏—â–µ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, —ç–∫–æ–ª–æ–≥–∏—è',
      specialties: ['–ë–∏–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è', '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–∏—Ç–∞–Ω–∏—è', '–≠–∫–æ–ª–æ–≥–∏—è'],
      prospects: '–ù–∞—É—á–Ω—ã–µ –∏–Ω—Å—Ç–∏—Ç—É—Ç—ã, –ø–∏—â–µ–≤–∞—è –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç—å, —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏'
    },
    vet: {
      name: '–§–∞–∫—É–ª—å—Ç–µ—Ç –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–æ–π –º–µ–¥–∏—Ü–∏–Ω—ã –∏ –±–∏–æ—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
      description: '–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∏—è, –∑–æ–æ—Ç–µ—Ö–Ω–∏—è, –∫–∏–Ω–æ–ª–æ–≥–∏—è',
      specialties: ['–í–µ—Ç–µ—Ä–∏–Ω–∞—Ä–∏—è', '–ó–æ–æ—Ç–µ—Ö–Ω–∏—è', '–ö–∏–Ω–æ–ª–æ–≥–∏—è'],
      prospects: '–í–µ—Ç–∫–ª–∏–Ω–∏–∫–∏, –∑–æ–æ–ø–∞—Ä–∫–∏, –∂–∏–≤–æ—Ç–Ω–æ–≤–æ–¥—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è'
    },
    management: {
      name: '–ò–Ω—Å—Ç–∏—Ç—É—Ç —ç–∫–æ–Ω–æ–º–∏–∫–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
      description: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ',
      specialties: ['–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–æ–º'],
      prospects: '–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–ª—É–∂–±–∞, –∫—Ä—É–ø–Ω—ã–µ –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏, –∫–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥'
    }
  },

  // –≠–ª–µ–º–µ–Ω—Ç—ã DOM
  elements: {
    modal: null,
    startButton: null
  },

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–µ—Å—Ç–∞
  currentQuestion: 0,
  answers: {},
  scores: {},
  isActive: false,

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
  init() {
    this.findElements();
    this.createQuizModal();
    this.bindEvents();
    console.log('üéØ –¢–µ—Å—Ç "–ü–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ –º–Ω–µ –†–ì–ê–£-–ú–°–•–ê?" –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  },

  // –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  findElements() {
    this.elements.startButton = document.getElementById('startQuizBtn');
  },

  // –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ç–µ—Å—Ç–∞
  createQuizModal() {
    const modal = document.createElement('div');
    modal.id = 'quizModal';
    modal.className = 'quiz-modal';
    modal.innerHTML = `
      <div class="quiz-modal-content">
        <div class="quiz-header">
          <h3 class="quiz-title">–ü–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ –º–Ω–µ –†–ì–ê–£-–ú–°–•–ê?</h3>
          <button class="quiz-close" id="closeQuizBtn">&times;</button>
        </div>
        <div class="quiz-body" id="quizBody">
          <!-- –ö–æ–Ω—Ç–µ–Ω—Ç —Ç–µ—Å—Ç–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
        </div>
        <div class="quiz-footer" id="quizFooter">
          <!-- –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
        </div>
      </div>
    `;
    
    document.body.appendChild(modal);
    this.elements.modal = modal;
  },

  // –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π
  bindEvents() {
    if (this.elements.startButton) {
      this.elements.startButton.addEventListener('click', () => {
        this.startQuiz();
      });
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    document.addEventListener('click', (e) => {
      if (e.target.id === 'closeQuizBtn' || e.target.id === 'quizModal') {
        this.closeQuiz();
      }
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ Escape
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && this.isActive) {
        this.closeQuiz();
      }
    });
  },

  // –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
  startQuiz() {
    this.resetQuiz();
    this.isActive = true;
    this.elements.modal.style.display = 'flex';
    this.showQuestion(0);
    document.body.style.overflow = 'hidden';
  },

  // –°–±—Ä–æ—Å —Ç–µ—Å—Ç–∞
  resetQuiz() {
    this.currentQuestion = 0;
    this.answers = {};
    this.scores = {
      agro: 0,
      tech: 0,
      eco: 0,
      bio: 0,
      vet: 0,
      management: 0
    };
  },

  // –ü–æ–∫–∞–∑–∞—Ç—å –≤–æ–ø—Ä–æ—Å
  showQuestion(questionIndex) {
    const question = this.QUESTIONS[questionIndex];
    const body = document.getElementById('quizBody');
    const footer = document.getElementById('quizFooter');

    // –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
    const progress = Math.round(((questionIndex + 1) / this.QUESTIONS.length) * 100);

    body.innerHTML = `
      <div class="quiz-progress">
        <div class="progress-bar">
          <div class="progress-fill" style="width: ${progress}%"></div>
        </div>
        <div class="progress-text">–í–æ–ø—Ä–æ—Å ${questionIndex + 1} –∏–∑ ${this.QUESTIONS.length}</div>
      </div>
      
      <div class="question-container">
        <h4 class="question-text">${question.question}</h4>
        <div class="answers-container">
          ${question.answers.map(answer => `
            <label class="answer-option">
              <input 
                type="${question.type === 'multiple' ? 'checkbox' : 'radio'}" 
                name="question-${question.id}" 
                value="${answer.id}"
                ${this.isAnswerSelected(question.id, answer.id) ? 'checked' : ''}
              >
              <span class="answer-text">${answer.text}</span>
            </label>
          `).join('')}
        </div>
      </div>
    `;

    // –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    footer.innerHTML = `
      <div class="quiz-navigation">
        ${questionIndex > 0 ? 
          '<button class="quiz-btn quiz-btn-secondary" id="prevQuestionBtn">–ù–∞–∑–∞–¥</button>' : 
          ''
        }
        <button class="quiz-btn quiz-btn-primary" id="nextQuestionBtn" ${!this.hasAnswerForQuestion(question.id) ? 'disabled' : ''}>
          ${questionIndex === this.QUESTIONS.length - 1 ? '–ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç' : '–î–∞–ª–µ–µ'}
        </button>
      </div>
    `;

    this.bindQuestionEvents(question);
  },

  // –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞
  bindQuestionEvents(question) {
    const inputs = document.querySelectorAll(`input[name="question-${question.id}"]`);
    const nextBtn = document.getElementById('nextQuestionBtn');
    const prevBtn = document.getElementById('prevQuestionBtn');

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤
    inputs.forEach(input => {
      input.addEventListener('change', () => {
        this.saveAnswer(question);
        nextBtn.disabled = false;
      });
    });

    // –ù–∞–≤–∏–≥–∞—Ü–∏—è
    if (nextBtn) {
      nextBtn.addEventListener('click', () => {
        this.saveAnswer(question);
        if (this.currentQuestion === this.QUESTIONS.length - 1) {
          this.showResults();
        } else {
          this.currentQuestion++;
          this.showQuestion(this.currentQuestion);
        }
      });
    }

    if (prevBtn) {
      prevBtn.addEventListener('click', () => {
        this.currentQuestion--;
        this.showQuestion(this.currentQuestion);
      });
    }
  },

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
  saveAnswer(question) {
    const inputs = document.querySelectorAll(`input[name="question-${question.id}"]:checked`);
    const selectedAnswers = Array.from(inputs).map(input => input.value);
    
    this.answers[question.id] = selectedAnswers;
    
    // –ü–æ–¥—Å—á–µ—Ç –±–∞–ª–ª–æ–≤
    selectedAnswers.forEach(answerId => {
      const answer = question.answers.find(a => a.id === answerId);
      if (answer && answer.scores) {
        Object.keys(answer.scores).forEach(faculty => {
          this.scores[faculty] = (this.scores[faculty] || 0) + answer.scores[faculty];
        });
      }
    });
  },

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å
  hasAnswerForQuestion(questionId) {
    return this.answers[questionId] && this.answers[questionId].length > 0;
  },

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–±—Ä–∞–Ω –ª–∏ –æ—Ç–≤–µ—Ç
  isAnswerSelected(questionId, answerId) {
    const questionAnswers = this.answers[questionId];
    return questionAnswers && questionAnswers.includes(answerId);
  },

  // –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
  showResults() {
    const body = document.getElementById('quizBody');
    const footer = document.getElementById('quizFooter');

    // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–æ–≤ –ø–æ –±–∞–ª–ª–∞–º
    const sortedFaculties = Object.keys(this.scores)
      .map(key => ({
        key,
        score: this.scores[key],
        faculty: this.FACULTIES[key]
      }))
      .sort((a, b) => b.score - a.score)
      .filter(item => item.score > 0);

    const topFaculty = sortedFaculties[0];
    const maxScore = Math.max(...Object.values(this.scores));
    const suitabilityPercent = Math.min(Math.round((maxScore / 15) * 100), 100);

    body.innerHTML = `
      <div class="quiz-results">
        <div class="results-header">
          <div class="suitability-circle">
            <div class="circle-progress" style="--percent: ${suitabilityPercent}">
              <span class="percent-text">${suitabilityPercent}%</span>
            </div>
          </div>
          <h4 class="results-title">
            ${suitabilityPercent >= 70 ? 'üéâ –†–ì–ê–£-–ú–°–•–ê –æ—Ç–ª–∏—á–Ω–æ –≤–∞–º –ø–æ–¥—Ö–æ–¥–∏—Ç!' :
              suitabilityPercent >= 50 ? 'üëç –†–ì–ê–£-–ú–°–•–ê –º–æ–∂–µ—Ç –±—ã—Ç—å —Ö–æ—Ä–æ—à–∏–º –≤—ã–±–æ—Ä–æ–º!' :
              'ü§î –°—Ç–æ–∏—Ç –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—ã'}
          </h4>
        </div>

        <div class="recommended-faculty">
          <h5>üéØ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</h5>
          <div class="faculty-card featured">
            <h6>${topFaculty.faculty.name}</h6>
            <p>${topFaculty.faculty.description}</p>
            <div class="faculty-details">
              <div class="specialties">
                <strong>–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏:</strong>
                <ul>
                  ${topFaculty.faculty.specialties.map(spec => `<li>${spec}</li>`).join('')}
                </ul>
              </div>
              <div class="prospects">
                <strong>–ö–∞—Ä—å–µ—Ä–Ω—ã–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã:</strong>
                <p>${topFaculty.faculty.prospects}</p>
              </div>
            </div>
          </div>
        </div>

        ${sortedFaculties.length > 1 ? `
          <div class="other-faculties">
            <h5>üìö –î—Ä—É–≥–∏–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</h5>
            ${sortedFaculties.slice(1, 3).map(item => `
              <div class="faculty-card">
                <h6>${item.faculty.name}</h6>
                <p>${item.faculty.description}</p>
                <div class="compatibility">–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: ${Math.round((item.score / maxScore) * 100)}%</div>
              </div>
            `).join('')}
          </div>
        ` : ''}

        <div class="next-steps">
          <h5>üöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:</h5>
          <ol class="steps-list">
            <li>–ò–∑—É—á–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–æ–≤</li>
            <li>–ü–æ—Å–µ—Ç–∏—Ç–µ –¥–Ω–∏ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –¥–≤–µ—Ä–µ–π</li>
            <li>–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å —É—Å–ª–æ–≤–∏—è–º–∏ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è</li>
            <li>–ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–º —ç–∫–∑–∞–º–µ–Ω–∞–º</li>
          </ol>
        </div>
      </div>
    `;

    footer.innerHTML = `
      <div class="quiz-navigation">
        <button class="quiz-btn quiz-btn-secondary" id="restartQuizBtn">–ü—Ä–æ–π—Ç–∏ –µ—â–µ —Ä–∞–∑</button>
        <button class="quiz-btn quiz-btn-primary" id="closeResultsBtn">–ò–∑—É—á–∏—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç</button>
      </div>
    `;

    // –°–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    document.getElementById('restartQuizBtn')?.addEventListener('click', () => {
      this.startQuiz();
    });

    document.getElementById('closeResultsBtn')?.addEventListener('click', () => {
      this.closeQuiz();
      // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —Ä–∞–∑–¥–µ–ª–∞–º —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–æ–≤
      document.getElementById('main-sections')?.scrollIntoView({ behavior: 'smooth' });
    });
  },

  // –ó–∞–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞
  closeQuiz() {
    this.isActive = false;
    this.elements.modal.style.display = 'none';
    document.body.style.overflow = '';
  },

  // –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–∞
  destroy() {
    if (this.elements.modal) {
      document.body.removeChild(this.elements.modal);
    }
    console.log('üéØ –¢–µ—Å—Ç "–ü–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ –º–Ω–µ –†–ì–ê–£-–ú–°–•–ê?" —É–Ω–∏—á—Ç–æ–∂–µ–Ω');
  }
};

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.UniversityQuiz = UniversityQuiz;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', () => {
  if (document.getElementById('startQuizBtn')) {
    UniversityQuiz.init();
  }
});

// ===== –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–¨ –ü–û–ò–°–ö–ê =====

const Search = {
  // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞
  config: {
    minQueryLength: 2,
    maxResults: 10,
    suggestionsDelay: 300
  },

  // –≠–ª–µ–º–µ–Ω—Ç—ã DOM
  elements: {
    form: null,
    input: null,
    button: null,
    clear: null,
    suggestions: null,
    results: null,
    filters: null,
    loading: null
  },

  // –î–∞–Ω–Ω—ã–µ
  searchIndex: [],
  currentQuery: '',
  selectedSuggestion: -1,

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
  init() {
    this.findElements();
    this.bindEvents();
    this.createSearchIndex();
    console.log('üîç –ü–æ–∏—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  },

  // –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ DOM
  findElements() {
    this.elements.form = document.querySelector('.search__form');
    this.elements.input = document.querySelector('.search__input');
    this.elements.button = document.querySelector('.search__button');
    this.elements.clear = document.querySelector('.search__clear');
    this.elements.suggestions = document.querySelector('.search__suggestions');
    this.elements.results = document.querySelector('.search__results');
    this.elements.filters = document.querySelectorAll('.search__filter');
    this.elements.loading = document.querySelector('.search__loading');
  },

  // –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π
  bindEvents() {
    if (!this.elements.input) return;

    // –ü–æ–∏—Å–∫ –ø–æ –≤–≤–æ–¥—É
    this.elements.input.addEventListener('input', 
      App.utils.debounce((e) => {
        this.handleInput(e);
      }, this.config.suggestionsDelay)
    );

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏—à –≤ –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞
    this.elements.input.addEventListener('keydown', (e) => {
      this.handleKeyDown(e);
    });

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
    if (this.elements.form) {
      this.elements.form.addEventListener('submit', (e) => {
        e.preventDefault();
        this.performSearch();
      });
    }

    // –ö–Ω–æ–ø–∫–∞ –ø–æ–∏—Å–∫–∞
    if (this.elements.button) {
      this.elements.button.addEventListener('click', () => {
        this.performSearch();
      });
    }

    // –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏
    if (this.elements.clear) {
      this.elements.clear.addEventListener('click', () => {
        this.clearSearch();
      });
    }

    // –§–∏–ª—å—Ç—Ä—ã
    this.elements.filters.forEach(filter => {
      filter.addEventListener('click', () => {
        this.toggleFilter(filter);
      });
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –ø–æ–ª—è
    document.addEventListener('click', (e) => {
      if (!e.target.closest('.search')) {
        this.clearSuggestions();
      }
    });
  },

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞
  handleInput(e) {
    const query = e.target.value.trim();
    this.currentQuery = query;

    if (query.length >= this.config.minQueryLength) {
      this.showSuggestions(query);
    } else {
      this.clearSuggestions();
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—á–∏—Å—Ç–∫–∏
    if (this.elements.clear) {
      this.elements.clear.style.display = query ? 'block' : 'none';
    }
  },

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏—à
  handleKeyDown(e) {
    const suggestions = document.querySelectorAll('.search__suggestion');
    
    switch (e.key) {
      case 'ArrowDown':
        e.preventDefault();
        this.selectedSuggestion = Math.min(
          this.selectedSuggestion + 1, 
          suggestions.length - 1
        );
        this.updateSuggestionSelection();
        break;
        
      case 'ArrowUp':
        e.preventDefault();
        this.selectedSuggestion = Math.max(this.selectedSuggestion - 1, -1);
        this.updateSuggestionSelection();
        break;
        
      case 'Enter':
        if (this.selectedSuggestion >= 0 && suggestions[this.selectedSuggestion]) {
          e.preventDefault();
          this.selectSuggestion(suggestions[this.selectedSuggestion]);
        }
        break;
        
      case 'Escape':
        this.clearSuggestions();
        this.elements.input.blur();
        break;
    }
  },

  // –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏
  showSuggestions(query) {
    if (!this.elements.suggestions) return;

    const suggestions = this.getSuggestions(query);
    
    if (suggestions.length === 0) {
      this.clearSuggestions();
      return;
    }

    const html = suggestions.map((suggestion, index) => `
      <div class="search__suggestion" data-index="${index}" data-url="${suggestion.url}">
        <div class="search__suggestion-text">${this.highlightText(suggestion.title, query)}</div>
        <div class="search__suggestion-category">${suggestion.category}</div>
      </div>
    `).join('');

    this.elements.suggestions.innerHTML = html;
    this.elements.suggestions.style.display = 'block';

    // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è –∫ –ø–æ–¥—Å–∫–∞–∑–∫–∞–º
    this.elements.suggestions.querySelectorAll('.search__suggestion').forEach(item => {
      item.addEventListener('click', () => {
        this.selectSuggestion(item);
      });
    });

    this.selectedSuggestion = -1;
  },

  // –ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏
  getSuggestions(query) {
    const normalizedQuery = query.toLowerCase();
    const suggestions = [];

    this.searchIndex.forEach(item => {
      const titleMatch = item.title.toLowerCase().includes(normalizedQuery);
      const contentMatch = item.content.toLowerCase().includes(normalizedQuery);
      
      if (titleMatch || contentMatch) {
        suggestions.push({
          title: item.title,
          category: item.category,
          url: item.url,
          relevance: titleMatch ? 2 : 1
        });
      }
    });

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏
    suggestions.sort((a, b) => b.relevance - a.relevance);
    
    return suggestions.slice(0, 5);
  },

  // –û–±–Ω–æ–≤–∏—Ç—å –≤—ã–¥–µ–ª–µ–Ω–∏–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏
  updateSuggestionSelection() {
    const suggestions = document.querySelectorAll('.search__suggestion');
    
    suggestions.forEach((item, index) => {
      if (index === this.selectedSuggestion) {
        item.classList.add('search__suggestion--active');
      } else {
        item.classList.remove('search__suggestion--active');
      }
    });
  },

  // –í—ã–±—Ä–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É
  selectSuggestion(suggestionElement) {
    const url = suggestionElement.dataset.url;
    const text = suggestionElement.querySelector('.search__suggestion-text').textContent;
    
    this.elements.input.value = text;
    this.clearSuggestions();
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    if (url) {
      window.location.href = url;
    }
  },

  // –û—á–∏—Å—Ç–∏—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏
  clearSuggestions() {
    if (this.elements.suggestions) {
      this.elements.suggestions.style.display = 'none';
      this.elements.suggestions.innerHTML = '';
    }
    this.selectedSuggestion = -1;
  },

  // –í—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∏—Å–∫
  performSearch() {
    const query = this.elements.input.value.trim();
    
    if (query.length < this.config.minQueryLength) {
      return;
    }

    this.showLoading();
    this.clearSuggestions();

    // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –ø–æ–∏—Å–∫–∞
    setTimeout(() => {
      const results = this.searchContent(query);
      this.displayResults(results, query);
      this.hideLoading();
    }, 300);
  },

  // –ü–æ–∏—Å–∫ –ø–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É
  searchContent(query) {
    const normalizedQuery = query.toLowerCase();
    const results = [];

    this.searchIndex.forEach(item => {
      const titleMatch = item.title.toLowerCase().includes(normalizedQuery);
      const contentMatch = item.content.toLowerCase().includes(normalizedQuery);
      
      if (titleMatch || contentMatch) {
        let relevance = 0;
        let snippet = '';

        if (titleMatch) {
          relevance += 3;
        }
        
        if (contentMatch) {
          relevance += 1;
          // –°–æ–∑–¥–∞–µ–º —Å–Ω–∏–ø–ø–µ—Ç —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
          snippet = this.createSnippet(item.content, normalizedQuery);
        }

        results.push({
          title: item.title,
          category: item.category,
          url: item.url,
          snippet: snippet,
          relevance: relevance
        });
      }
    });

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏
    results.sort((a, b) => b.relevance - a.relevance);
    
    return results.slice(0, this.config.maxResults);
  },

  // –°–æ–∑–¥–∞—Ç—å —Å–Ω–∏–ø–ø–µ—Ç —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
  createSnippet(content, query, maxLength = 200) {
    const index = content.toLowerCase().indexOf(query);
    if (index === -1) return content.substring(0, maxLength) + '...';

    const start = Math.max(0, index - 50);
    const end = Math.min(content.length, index + query.length + 50);
    
    let snippet = content.substring(start, end);
    
    if (start > 0) snippet = '...' + snippet;
    if (end < content.length) snippet = snippet + '...';
    
    return snippet;
  },

  // –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
  displayResults(results, query) {
    if (!this.elements.results) return;

    if (results.length === 0) {
      this.elements.results.innerHTML = `
        <div class="search__no-results">
          <h3>–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</h3>
          <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏.</p>
        </div>
      `;
      return;
    }

    const html = results.map(result => `
      <div class="search__result">
        <div class="search__result-category">${result.category}</div>
        <h3 class="search__result-title">
          <a href="${result.url}">${this.highlightText(result.title, query)}</a>
        </h3>
        <div class="search__result-snippet">
          ${this.highlightText(result.snippet, query)}
        </div>
      </div>
    `).join('');

    this.elements.results.innerHTML = html;
  },

  // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
  highlightText(text, query) {
    const regex = new RegExp(`(${query})`, 'gi');
    return text.replace(regex, '<span class="search__result-highlight">$1</span>');
  },

  // –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä
  toggleFilter(filterElement) {
    filterElement.classList.toggle('search__filter--active');
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫, –ø–æ–≤—Ç–æ—Ä—è–µ–º –µ–≥–æ —Å –Ω–æ–≤—ã–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
    if (this.currentQuery) {
      this.performSearch();
    }
  },

  // –ü–æ–ª—É—á–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
  getActiveFilters() {
    return Array.from(this.elements.filters)
      .filter(filter => filter.classList.contains('search__filter--active'))
      .map(filter => filter.dataset.category);
  },

  // –û—á–∏—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫
  clearSearch() {
    this.elements.input.value = '';
    this.currentQuery = '';
    this.clearSuggestions();
    
    if (this.elements.results) {
      this.elements.results.innerHTML = '';
    }
    
    if (this.elements.clear) {
      this.elements.clear.style.display = 'none';
    }
  },

  // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
  showLoading() {
    if (this.elements.loading) {
      this.elements.loading.style.display = 'flex';
    }
  },

  // –°–∫—Ä—ã—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
  hideLoading() {
    if (this.elements.loading) {
      this.elements.loading.style.display = 'none';
    }
  },

  // –°–æ–∑–¥–∞—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å
  createSearchIndex() {
    // –ë–∞–∑–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
    this.searchIndex = [
      {
        title: '–ü–æ–¥–∞—á–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤',
        category: '–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ',
        url: './pages/applicant-path/documents.html',
        content: '–î–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –ø–∞—Å–ø–æ—Ä—Ç –∞—Ç—Ç–µ—Å—Ç–∞—Ç –°–ù–ò–õ–° –∑–∞—è–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞'
      },
      {
        title: '–ö–æ–Ω–∫—É—Ä—Å–Ω—ã–π –æ—Ç–±–æ—Ä',
        category: '–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ', 
        url: './pages/applicant-path/selection.html',
        content: '–ö–æ–Ω–∫—É—Ä—Å–Ω—ã–µ —Å–ø–∏—Å–∫–∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–±–æ—Ä –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤ –±–∞–ª–ª—ã –ï–ì–≠'
      },
      {
        title: '–ó–∞—á–∏—Å–ª–µ–Ω–∏–µ',
        category: '–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ',
        url: './pages/applicant-path/enrollment.html',
        content: '–ó–∞—á–∏—Å–ª–µ–Ω–∏–µ –ø—Ä–∏–∫–∞–∑—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–µ—Ä–µ–¥–∞—á–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–æ–≥–æ–≤–æ—Ä –æ–±—É—á–µ–Ω–∏–µ'
      },
      {
        title: '–û–±—â–µ–∂–∏—Ç–∏–µ',
        category: '–ü—Ä–æ–∂–∏–≤–∞–Ω–∏–µ',
        url: './pages/university-life/dormitory.html',
        content: '–û–±—â–µ–∂–∏—Ç–∏–µ –∑–∞—Å–µ–ª–µ–Ω–∏–µ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏–µ –±–ª–æ—á–Ω—ã–π —Ç–∏–ø –∫–æ–º–Ω–∞—Ç—ã –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–æ –º–æ–∂–Ω–æ —á—Ç–æ –Ω–µ–ª—å–∑—è'
      },
      {
        title: '–°—Ç–∏–ø–µ–Ω–¥–∏–∏',
        category: '–§–∏–Ω–∞–Ω—Å—ã',
        url: './pages/scholarships/index.html',
        content: '–°—Ç–∏–ø–µ–Ω–¥–∏—è –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∞—è —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø–æ–≤—ã—à–µ–Ω–Ω–∞—è –±–∞–ª–ª—ã —Å–∏—Å—Ç–µ–º–∞ –ø–æ–æ—â—Ä–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤'
      }
    ];

    console.log(`üìö –°–æ–∑–¥–∞–Ω –ø–æ–∏—Å–∫–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å: ${this.searchIndex.length} –∑–∞–ø–∏—Å–µ–π`);
  },

  // –û–±–Ω–æ–≤–∏—Ç—å –∏–Ω–¥–µ–∫—Å (–¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞)
  updateIndex(contentData) {
    if (contentData && contentData.pages) {
      this.searchIndex = contentData.pages.map(page => ({
        title: page.title,
        category: page.category,
        url: page.url,
        content: page.content || page.description || ''
      }));
      
      console.log(`üìö –û–±–Ω–æ–≤–ª–µ–Ω –ø–æ–∏—Å–∫–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å: ${this.searchIndex.length} –∑–∞–ø–∏—Å–µ–π`);
    }
  }
};

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.Search = Search;

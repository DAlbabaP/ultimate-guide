// ===== –ò–ù–¢–ï–†–ê–ö–¢–ò–í–ù–ê–Ø –ö–ê–†–¢–ê –ò–ù–§–†–ê–°–¢–†–£–ö–¢–£–†–´ =====

const InfrastructureMap = {  // –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã –≤–æ–∫—Ä—É–≥ –†–ì–ê–£-–ú–°–•–ê
  PLACES: [
    // –¢–¶ "–ë–∞–π–∫–∞–ª" –∏ –º–∞–≥–∞–∑–∏–Ω—ã
    {
      id: 'tc-baikal',
      name: '–¢–¶ "–ë–∞–π–∫–∞–ª"',
      type: 'shop',
      category: '–¢–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä',
      distance: 0.5,
      price: 'medium',
      rating: 4.3,
      address: '–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ ¬´–ë–æ–ª—å—à–∞—è –ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∞—è¬ª',
      hours: '10:00-22:00',
      description: '–ü–æ–ø—É–ª—è—Ä–Ω—ã–π —Ç–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä —Å –º–∞–≥–∞–∑–∏–Ω–∞–º–∏, KFC –∏ –ø—É–Ω–∫—Ç–∞–º–∏ –≤—ã–¥–∞—á–∏',
      coordinates: { lat: 55.8205, lng: 37.5364 }
    },
    {
      id: 'kfc-baikal',
      name: 'KFC (–≤ –¢–¶ "–ë–∞–π–∫–∞–ª")',
      type: 'food',
      category: '–§–∞—Å—Ç—Ñ—É–¥',
      distance: 0.5,
      price: 'medium',
      rating: 4.1,
      address: '–¢–¶ "–ë–∞–π–∫–∞–ª", –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ ¬´–ë–æ–ª—å—à–∞—è –ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∞—è¬ª',
      hours: '10:00-22:00',
      description: '–†–µ—Å—Ç–æ—Ä–∞–Ω –±—ã—Å—Ç—Ä–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è KFC –≤ —Ç–æ—Ä–≥–æ–≤–æ–º —Ü–µ–Ω—Ç—Ä–µ',
      coordinates: { lat: 55.8205, lng: 37.5364 }
    },
    {
      id: 'lenta-baikal',
      name: '–õ–µ–Ω—Ç–∞ (–≤ –¢–¶ "–ë–∞–π–∫–∞–ª")',
      type: 'shop',
      category: '–ì–∏–ø–µ—Ä–º–∞—Ä–∫–µ—Ç',
      distance: 0.5,
      price: 'medium',
      rating: 4.2,
      address: '–¢–¶ "–ë–∞–π–∫–∞–ª", –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ ¬´–ë–æ–ª—å—à–∞—è –ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∞—è¬ª',
      hours: '08:00-24:00',
      description: '–ö—Ä—É–ø–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç–æ–≤—ã–π –≥–∏–ø–µ—Ä–º–∞—Ä–∫–µ—Ç —Å —à–∏—Ä–æ–∫–∏–º –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–æ–º',
      coordinates: { lat: 55.8205, lng: 37.5364 }
    },
    {
      id: 'chizhik-baikal',
      name: '–ß–∏–∂–∏–∫ (–≤ –¢–¶ "–ë–∞–π–∫–∞–ª")',
      type: 'shop',
      category: '–ü—Ä–æ–¥—É–∫—Ç–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω',
      distance: 0.5,
      price: 'low',
      rating: 4.0,
      address: '–¢–¶ "–ë–∞–π–∫–∞–ª", –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ ¬´–ë–æ–ª—å—à–∞—è –ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∞—è¬ª',
      hours: '08:00-23:00',
      description: '–ü—Ä–æ–¥—É–∫—Ç–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏',
      coordinates: { lat: 55.8205, lng: 37.5364 }
    },
    {
      id: 'fixprice-baikal',
      name: '–§–∏–∫—Å –ü—Ä–∞–π—Å (–≤ –¢–¶ "–ë–∞–π–∫–∞–ª")',
      type: 'shop',
      category: '–¢–æ–≤–∞—Ä—ã –¥–ª—è –¥–æ–º–∞',
      distance: 0.5,
      price: 'low',
      rating: 3.9,
      address: '–¢–¶ "–ë–∞–π–∫–∞–ª", –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ ¬´–ë–æ–ª—å—à–∞—è –ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∞—è¬ª',
      hours: '09:00-22:00',
      description: '–ú–∞–≥–∞–∑–∏–Ω —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ü–µ–Ω–∞–º',
      coordinates: { lat: 55.8205, lng: 37.5364 }
    },
    {
      id: 'diksi',
      name: '–î–∏–∫—Å–∏',
      type: 'shop',
      category: '–ü—Ä–æ–¥—É–∫—Ç–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω',
      distance: 0.8,
      price: 'low',
      rating: 4.0,
      address: '–≤ —Å—Ç–æ—Ä–æ–Ω—É –ú–¶–ö ¬´–ö–æ–ø—Ç–µ–≤–æ¬ª',
      hours: '08:00-23:00',
      description: '–ü—Ä–æ–¥—É–∫—Ç–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω —Å —Ö–æ—Ä–æ—à–∏–º–∏ —Ü–µ–Ω–∞–º–∏ –∏ —à–∏—Ä–æ–∫–∏–º –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–æ–º',
      coordinates: { lat: 55.8189, lng: 37.5376 }
    },

    // –ü—É–Ω–∫—Ç—ã –≤—ã–¥–∞—á–∏
    {
      id: 'ozon-pickup',
      name: '–ü—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏ Ozon',
      type: 'service',
      category: '–î–æ—Å—Ç–∞–≤–∫–∞',
      distance: 0.5,
      price: 'free',
      rating: 4.2,
      address: '–ë–æ–ª—å—à–∞—è –ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∞—è —É–ª., 51/1',
      hours: '10:00-21:00',
      description: '–ü—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏ –∑–∞–∫–∞–∑–æ–≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞ Ozon',
      coordinates: { lat: 55.8201, lng: 37.5372 }
    },
    {
      id: 'wildberries-pickup',
      name: '–ü—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏ Wildberries',
      type: 'service',
      category: '–î–æ—Å—Ç–∞–≤–∫–∞',
      distance: 0.6,
      price: 'free',
      rating: 4.1,
      address: '–ú–∏—Ö–∞–ª–∫–æ–≤—Å–∫–∞—è —É–ª., 2',
      hours: '09:00-21:00',
      description: '–ü—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏ –∑–∞–∫–∞–∑–æ–≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞ Wildberries',
      coordinates: { lat: 55.8185, lng: 37.5389 }
    },
    {
      id: 'cdek-pickup',
      name: '–ü—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏ CDEK',
      type: 'service',
      category: '–î–æ—Å—Ç–∞–≤–∫–∞',
      distance: 0.7,
      price: 'free',
      rating: 4.3,
      address: '–ö—Ä–∞—Å–Ω–æ—Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–π –ø—Ä., 7',
      hours: '10:00-20:00',
      description: '–ü—É–Ω–∫—Ç –≤—ã–¥–∞—á–∏ —Å–ª—É–∂–±—ã –¥–æ—Å—Ç–∞–≤–∫–∏ CDEK',
      coordinates: { lat: 55.8176, lng: 37.5401 }
    },
    {
      id: 'post-office',
      name: '–ü–æ—á—Ç–∞ –†–æ—Å—Å–∏–∏',
      type: 'service',
      category: '–ü–æ—á—Ç–∞',
      distance: 1.2,
      price: 'free',
      rating: 3.5,
      address: '–î–º–∏—Ç—Ä–æ–≤—Å–∫–æ–µ —à., 17, –∫–æ—Ä–ø. 2 (–æ—Ç–¥–µ–ª–µ–Ω–∏–µ ‚Ññ 127434)',
      hours: '08:00-20:00',
      description: '–û—Ç–¥–µ–ª–µ–Ω–∏–µ –ø–æ—á—Ç–æ–≤–æ–π —Å–≤—è–∑–∏ ‚Ññ 127434',
      coordinates: { lat: 55.8167, lng: 37.5412 }
    },

    // –°–ø–æ—Ä—Ç
    {
      id: 'gym-dormitory',
      name: '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∑–∞–ª —É –æ–±—â–µ–∂–∏—Ç–∏—è',
      type: 'sport',
      category: '–¢—Ä–µ–Ω–∞–∂–µ—Ä–Ω—ã–π –∑–∞–ª',
      distance: 0.05,
      price: 'medium',
      rating: 4.2,
      address: '–í 50 –º–µ—Ç—Ä–∞—Ö –æ—Ç –æ–±—â–µ–∂–∏—Ç–∏—è',
      hours: '07:00-23:00',
      description: '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∑–∞–ª —Ä—è–¥–æ–º —Å –æ–±—â–µ–∂–∏—Ç–∏–µ–º. –ü–µ—Ä–≤—ã–π –º–µ—Å—è—Ü 2500‚ÇΩ, –ø–æ—Å–ª–µ–¥—É—é—â–∏–µ 1750‚ÇΩ',
      coordinates: { lat: 55.8198, lng: 37.5355 }
    },

    // –ú–µ–¥–∏—Ü–∏–Ω–∞
    {
      id: 'pediatric-clinic',
      name: '–î–µ—Ç—Å–∫–∞—è –≥–æ—Ä–æ–¥—Å–∫–∞—è –ø–æ–ª–∏–∫–ª–∏–Ω–∏–∫–∞ ‚Ññ 15',
      type: 'medical',
      category: '–ü–æ–ª–∏–∫–ª–∏–Ω–∏–∫–∞',
      distance: 0.8,
      price: 'free',
      rating: 3.8,
      address: '—É–ª–∏—Ü–∞ –í—Å–µ–≤–æ–ª–æ–¥–∞ –í–∏—à–Ω–µ–≤—Å–∫–æ–≥–æ, 4–ê',
      hours: '08:00-20:00',
      description: '–ü–æ–ª–∏–∫–ª–∏–Ω–∏–∫–∞ –¥–ª—è –Ω–µ—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ (–¥–æ 18 –ª–µ—Ç)',
      coordinates: { lat: 55.8176, lng: 37.5389 }
    },
    {
      id: 'adult-clinic',
      name: '–ì–ë–£–ó –ì–ü ‚Ññ 6, —Ñ–∏–ª–∏–∞–ª ‚Ññ 3',
      type: 'medical',
      category: '–ü–æ–ª–∏–∫–ª–∏–Ω–∏–∫–∞',
      distance: 0.9,
      price: 'free',
      rating: 3.9,
      address: '3-–π –ù–æ–≤–æ–º–∏—Ö–∞–ª–∫–æ–≤—Å–∫–∏–π –ø—Ä., 3–ê, —Å—Ç—Ä. 1',
      hours: '08:00-20:00',
      description: '–ü–æ–ª–∏–∫–ª–∏–Ω–∏–∫–∞ –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ (18+ –ª–µ—Ç)',
      coordinates: { lat: 55.8167, lng: 37.5401 }
    }
  ],

  // –§–∏–ª—å—Ç—Ä—ã
  FILTERS: {
    type: 'all',
    distance: 'all',
    price: 'all'
  },

  // –≠–ª–µ–º–µ–Ω—Ç—ã DOM
  elements: {
    container: null,
    mapContainer: null,
    filters: null,
    placesList: null
  },

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ
  currentView: 'list', // 'list' –∏–ª–∏ 'map'
  filteredPlaces: [],

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
  init() {
    this.findElements();
    this.createFilters();
    this.bindEvents();
    this.filterPlaces();
    this.render();
    console.log('üó∫Ô∏è –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
  },
  // –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  findElements() {
    this.elements.container = document.querySelector('.infrastructure-map-container');
    this.elements.mapContainer = document.querySelector('.map-display');
    this.elements.filters = document.querySelector('.filter-buttons');
    this.elements.placesList = document.getElementById('placesList');
  },
  // –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  createFilters() {
    // –§–∏–ª—å—Ç—Ä—ã —É–∂–µ —Å–æ–∑–¥–∞–Ω—ã –≤ HTML, –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫
    this.updateResultsCount();
  },
  // –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π
  bindEvents() {
    // –ö–Ω–æ–ø–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    const filterButtons = document.querySelectorAll('.filter-btn');
    filterButtons.forEach(btn => {
      btn.addEventListener('click', (e) => {
        // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å–æ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
        filterButtons.forEach(b => b.classList.remove('active'));
        // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ
        e.target.closest('.filter-btn').classList.add('active');
        
        // –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ –ø—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä
        const category = e.target.closest('.filter-btn').dataset.category;
        this.FILTERS.type = category === 'all' ? 'all' : this.mapCategoryToType(category);
        this.filterPlaces();
        this.render();
      });
    });
  },

  // –ú–∞–ø–ø–∏–Ω–≥ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫ —Ç–∏–ø–∞–º
  mapCategoryToType(category) {
    const mapping = {
      'shopping': 'shop',
      'food': 'food', 
      'delivery': 'service',
      'sports': 'sport',
      'health': 'medical'
    };
    return mapping[category] || category;
  },

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –º–µ—Å—Ç
  filterPlaces() {
    this.filteredPlaces = this.PLACES.filter(place => {
      // –§–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É
      if (this.FILTERS.type !== 'all' && place.type !== this.FILTERS.type) {
        return false;
      }

      // –§–∏–ª—å—Ç—Ä –ø–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—é
      if (this.FILTERS.distance !== 'all') {
        const maxDistance = parseFloat(this.FILTERS.distance);
        if (place.distance > maxDistance) {
          return false;
        }
      }

      // –§–∏–ª—å—Ç—Ä –ø–æ —Ü–µ–Ω–µ
      if (this.FILTERS.price !== 'all' && place.price !== this.FILTERS.price) {
        return false;
      }

      return true;
    });

    // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—é
    this.filteredPlaces.sort((a, b) => a.distance - b.distance);
  },

  // –°–±—Ä–æ—Å —Ñ–∏–ª—å—Ç—Ä–æ–≤
  resetFilters() {
    this.FILTERS = { type: 'all', distance: 'all', price: 'all' };
    
    document.getElementById('typeFilter').value = 'all';
    document.getElementById('distanceFilter').value = 'all';
    document.getElementById('priceFilter').value = 'all';
    
    this.filterPlaces();
    this.render();
  },

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∏–¥–∞
  switchView(view) {
    this.currentView = view;
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
    document.querySelectorAll('.view-btn').forEach(btn => {
      btn.classList.remove('active');
    });
    document.getElementById(view === 'list' ? 'listViewBtn' : 'mapViewBtn').classList.add('active');
    
    this.render();
  },  // –û—Ç—Ä–∏—Å–æ–≤–∫–∞
  render() {
    if (!this.elements.placesList) return;

    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏ —Å–ø–∏—Å–æ–∫, –∏ –∫–∞—Ä—Ç—É –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
    this.renderList();
    this.renderMap();
    this.updateResultsCount();
  },

  // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å–ø–∏—Å–∫–∞
  renderList() {
    if (!this.elements.placesList) return;

    if (this.filteredPlaces.length === 0) {
      this.elements.placesList.innerHTML = `
        <div class="no-results">
          <div class="no-results-icon">üîç</div>
          <h4>–ú–µ—Å—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h4>
          <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é</p>
        </div>
      `;
      return;
    }

    this.elements.placesList.innerHTML = this.filteredPlaces
      .map(place => this.createPlaceCard(place))
      .join('');
  },
  // –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–∞—Ä—Ç—ã
  renderMap() {
    if (!this.elements.mapContainer) return;

    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞—Ä—Ç—ã
    this.elements.mapContainer.innerHTML = `
      <div id="leaflet-map" style="height: 100%; width: 100%;"></div>
    `;

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—Ä—Ç—É Leaflet
    const mapElement = document.getElementById('leafletMap');
    
    // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –†–ì–ê–£-–ú–°–•–ê
    const universityCoords = [55.8198, 37.5355];
      // –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç—É
    const map = L.map('leaflet-map', {
      attributionControl: false,
      zoomControl: true
    }).setView(universityCoords, 15);
      // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª–æ–π OpenStreetMap
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: ''
    }).addTo(map);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ä —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞
    const universityIcon = L.divIcon({
      className: 'university-marker',
      html: '<div style="background: #4a9058; color: white; border-radius: 50%; width: 30px; height: 30px; display: flex; align-items: center; justify-content: center; font-weight: bold; border: 3px solid white; box-shadow: 0 2px 10px rgba(0,0,0,0.3);">üè´</div>',
      iconSize: [30, 30],
      iconAnchor: [15, 15]
    });
    
    L.marker(universityCoords, { icon: universityIcon })
      .addTo(map)
      .bindPopup('<strong>–†–ì–ê–£-–ú–°–•–ê –∏–º. –ö.–ê. –¢–∏–º–∏—Ä—è–∑–µ–≤–∞</strong><br>–ì–ª–∞–≤–Ω—ã–π –∫–æ—Ä–ø—É—Å —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ä—ã –¥–ª—è –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–µ—Å—Ç
    this.filteredPlaces.forEach(place => {
      const markerIcon = this.createMarkerIcon(place);
      const marker = L.marker([place.coordinates.lat, place.coordinates.lng], { icon: markerIcon })
        .addTo(map);
      
      // –°–æ–∑–¥–∞–µ–º –ø–æ–ø–∞–ø –¥–ª—è –º–∞—Ä–∫–µ—Ä–∞
      const popupContent = `
        <div class="map-popup">
          <h4>${place.name}</h4>
          <p class="popup-category">${place.category}</p>
          <div class="popup-info">
            <div class="popup-distance">ÔøΩ ${place.distance} –∫–º</div>
            <div class="popup-rating">‚≠ê ${place.rating}</div>
          </div>
          <p class="popup-address">${place.address}</p>
          <p class="popup-hours">üïí ${place.hours}</p>
        </div>
      `;
      
      marker.bindPopup(popupContent);
    });
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –º–µ—Å—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è, –ø–æ–¥–≥–æ–Ω—è–µ–º –∫–∞—Ä—Ç—É –ø–æ–¥ –≤—Å–µ –º–∞—Ä–∫–µ—Ä—ã
    if (this.filteredPlaces.length > 0) {
      const group = new L.featureGroup([
        L.marker(universityCoords),
        ...this.filteredPlaces.map(place => 
          L.marker([place.coordinates.lat, place.coordinates.lng])
        )
      ]);
      map.fitBounds(group.getBounds().pad(0.1));
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞—Ä—Ç—É
    this.mapInstance = map;
  },

  // –°–æ–∑–¥–∞–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –º–∞—Ä–∫–µ—Ä–∞ –¥–ª—è –º–µ—Å—Ç–∞
  createMarkerIcon(place) {
    const typeIcons = {
      shop: 'üõí',
      food: 'üçΩÔ∏è',
      sport: 'üí™',
      medical: 'üè•',
      service: 'üì¶'
    };
    
    const typeColors = {
      shop: '#17a2b8',
      food: '#fd7e14',
      sport: '#6f42c1',
      medical: '#dc3545',
      service: '#20c997'
    };
    
    const icon = typeIcons[place.type] || 'üìç';
    const color = typeColors[place.type] || '#6c757d';
    
    return L.divIcon({
      className: 'custom-marker',
      html: `<div style="background: ${color}; color: white; border-radius: 50%; width: 25px; height: 25px; display: flex; align-items: center; justify-content: center; font-size: 12px; border: 2px solid white; box-shadow: 0 2px 6px rgba(0,0,0,0.3);">${icon}</div>`,
      iconSize: [25, 25],
      iconAnchor: [12.5, 12.5]
    });
  },

  // –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –º–µ—Å—Ç–∞
  createPlaceCard(place) {
    const typeIcons = {
      shop: 'üõí',
      food: 'üçΩÔ∏è',
      sport: 'üí™',
      medical: 'üè•',
      bank: 'üè¶',
      pharmacy: 'üíä',
      service: '‚úÇÔ∏è'
    };

    const priceLabels = {
      free: '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ',
      low: '‚ÇΩ',
      medium: '‚ÇΩ‚ÇΩ',
      high: '‚ÇΩ‚ÇΩ‚ÇΩ'
    };

    return `
      <div class="place-card" data-id="${place.id}">
        <div class="place-header">
          <div class="place-icon">${typeIcons[place.type] || 'üìç'}</div>
          <div class="place-info">
            <h4 class="place-name">${place.name}</h4>
            <div class="place-category">${place.category}</div>
          </div>
          <div class="place-badges">
            <div class="distance-badge">${place.distance}–∫–º</div>
            <div class="price-badge price-${place.price}">${priceLabels[place.price]}</div>
          </div>
        </div>
        
        <div class="place-details">
          <div class="place-rating">
            <span class="rating-stars">${this.generateStars(place.rating)}</span>
            <span class="rating-value">${place.rating}</span>
          </div>
          
          <div class="place-address">
            <svg viewBox="0 0 24 24" fill="currentColor" class="icon">
              <path d="M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z"/>
            </svg>
            ${place.address}
          </div>
          
          <div class="place-hours">
            <svg viewBox="0 0 24 24" fill="currentColor" class="icon">
              <path d="M12 2C6.5 2 2 6.5 2 12s4.5 10 10 10 10-4.5 10-10S17.5 2 12 2zm4.2 14.2L11 13V7h1.5v5.2l4.5 2.7-.8 1.3z"/>
            </svg>
            ${place.hours}
          </div>
          
          <div class="place-description">${place.description}</div>
        </div>
      </div>
    `;
  },

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–≤–µ–∑–¥ —Ä–µ–π—Ç–∏–Ω–≥–∞
  generateStars(rating) {
    const fullStars = Math.floor(rating);
    const hasHalfStar = rating % 1 >= 0.5;
    const emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);

    return '‚òÖ'.repeat(fullStars) + 
           (hasHalfStar ? '‚òÜ' : '') + 
           '‚òÜ'.repeat(emptyStars);
  },
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  updateResultsCount() {
    const countElement = document.querySelector('.places-count');
    if (countElement) {
      const count = this.filteredPlaces.length;
      const word = count === 1 ? '–æ–±—ä–µ–∫—Ç' : count < 5 ? '–æ–±—ä–µ–∫—Ç–∞' : '–æ–±—ä–µ–∫—Ç–æ–≤';
      countElement.textContent = `${count} ${word}`;
    }
  },

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Å—Ç–∞ –ø–æ ID
  getPlaceById(id) {
    return this.PLACES.find(place => place.id === id);
  },

  // –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–∞
  destroy() {
    console.log('üó∫Ô∏è –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∞');
  }
};

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.InfrastructureMap = InfrastructureMap;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', () => {
  if (document.querySelector('.infrastructure-map-container')) {
    InfrastructureMap.init();
  }
});

// ===== –°–ò–°–¢–ï–ú–ê –£–ü–†–ê–í–õ–ï–ù–ò–Ø –û–†–ì–ê–ù–ò–ó–ê–¶–ò–Ø–ú–ò =====

const OrganizationsManager = {
  // –î–∞–Ω–Ω—ã–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π
  data: null,
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
  async init() {
    await this.loadData();
    this.setupEventListeners();
  },
  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π
  async loadData() {
    try {
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å –∫ JSON —Ñ–∞–π–ª—É
      const currentPath = window.location.pathname;
      let dataPath = '';
      
      if (currentPath.includes('/pages/organizations/')) {
        dataPath = '../../data/organizations.json';
      } else if (currentPath.includes('/pages/')) {
        dataPath = '../data/organizations.json';
      } else {
        dataPath = 'data/organizations.json';
      }
      
      console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑:', dataPath);
      const response = await fetch(dataPath);
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      this.data = await response.json();
      console.log('üìä –î–∞–Ω–Ω—ã–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', this.data);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π:', error);
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
      this.data = {
        organizations: [],
        categories: []
      };
    }
  },

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ ID
  getOrganization(id) {
    if (!this.data || !this.data.organizations) {
      return null;
    }
    return this.data.organizations.find(org => org.id === id);
  },

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  getOrganizationsByCategory(categoryId) {
    if (!this.data || !this.data.organizations) {
      return [];
    }
    return this.data.organizations.filter(org => org.category === categoryId && org.active);
  },

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π
  getActiveOrganizations() {
    if (!this.data || !this.data.organizations) {
      return [];
    }
    return this.data.organizations.filter(org => org.active);
  },

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π
  getFeaturedOrganizations() {
    if (!this.data || !this.data.organizations) {
      return [];
    }
    return this.data.organizations.filter(org => org.featured && org.active);
  },

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ ID
  getCategory(id) {
    if (!this.data || !this.data.categories) {
      return null;
    }
    return this.data.categories.find(cat => cat.id === id);
  },

  // –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
  createOrganizationCard(organization) {
    const category = this.getCategory(organization.category);
    
    return `
      <div class="card organization-card" data-org-id="${organization.id}">
        <div class="card__header">
          <div class="organization-card__logo">
            <img src="${organization.logo}" alt="${organization.name}" loading="lazy">
          </div>
          <div class="organization-card__info">
            <h3 class="card__title">${organization.name}</h3>
            <div class="card__subtitle">${category ? category.name : ''}</div>
          </div>
        </div>
        <div class="card__content">
          <p class="card__text">${Utils.truncateText(organization.description, 150)}</p>
        </div>
        <div class="card__footer">
          <div class="organization-card__actions">
            <a href="organizations/${organization.id}.html" class="btn btn-primary btn-sm">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</a>
            ${organization.contacts.vk ? `<a href="${organization.contacts.vk}" target="_blank" rel="noopener" class="btn btn-secondary btn-sm">–í–ö</a>` : ''}
            ${organization.contacts.telegram ? `<a href="${organization.contacts.telegram}" target="_blank" rel="noopener" class="btn btn-secondary btn-sm">TG</a>` : ''}
          </div>
        </div>
      </div>
    `;
  },

  // –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π
  createOrganizationsList(organizations, containerId) {
    const container = document.getElementById(containerId);
    if (!container) {
      console.error(`‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä ${containerId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
      return;
    }

    if (!organizations || organizations.length === 0) {
      container.innerHTML = `
        <div class="empty-state">
          <h3>–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
          <p>–í –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π.</p>
        </div>
      `;
      return;
    }

    container.innerHTML = organizations.map(org => this.createOrganizationCard(org)).join('');
  },

  // –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
  createCategoryFilter(containerId) {
    const container = document.getElementById(containerId);
    if (!container || !this.data || !this.data.categories) {
      return;
    }

    const filterHTML = `
      <div class="category-filter">
        <button class="filter-btn active" data-category="all">–í—Å–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏</button>
        ${this.data.categories.map(category => `
          <button class="filter-btn" data-category="${category.id}">${category.name}</button>
        `).join('')}
      </div>
    `;

    container.innerHTML = filterHTML;
  },

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π
  filterOrganizations(categoryId) {
    const organizations = categoryId === 'all' 
      ? this.getActiveOrganizations() 
      : this.getOrganizationsByCategory(categoryId);
    
    this.createOrganizationsList(organizations, 'organizationsList');
  },

  // –ü–æ–∏—Å–∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π
  searchOrganizations(query) {
    if (!this.data || !this.data.organizations || !query.trim()) {
      return this.getActiveOrganizations();
    }

    const searchTerm = query.toLowerCase().trim();
    return this.data.organizations.filter(org => {
      return org.active && (
        org.name.toLowerCase().includes(searchTerm) ||
        org.description.toLowerCase().includes(searchTerm) ||
        org.mission.toLowerCase().includes(searchTerm)
      );
    });
  },

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
  setupEventListeners() {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–æ–≤ –ø–æ —Ñ–∏–ª—å—Ç—Ä–∞–º –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    document.addEventListener('click', (e) => {
      if (e.target.classList.contains('filter-btn')) {
        // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
        document.querySelectorAll('.filter-btn').forEach(btn => {
          btn.classList.remove('active');
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ
        e.target.classList.add('active');
        
        // –§–∏–ª—å—Ç—Ä—É–µ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
        const categoryId = e.target.getAttribute('data-category');
        this.filterOrganizations(categoryId);
      }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∏—Å–∫–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å –ø–æ–∏—Å–∫–æ–≤–æ–µ –ø–æ–ª–µ)
    const searchInput = document.getElementById('organizationSearch');
    if (searchInput) {
      let searchTimeout;
      searchInput.addEventListener('input', (e) => {
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(() => {
          const results = this.searchOrganizations(e.target.value);
          this.createOrganizationsList(results, 'organizationsList');
        }, 300);
      });
    }
  },

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–ø–∏—Å–∫–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π
  initOrganizationsPage() {
    // –°–æ–∑–¥–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    this.createCategoryFilter('categoryFilter');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    this.createOrganizationsList(this.getActiveOrganizations(), 'organizationsList');
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    this.updateStats();
  },

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  updateStats() {
    const statsContainer = document.getElementById('organizationsStats');
    if (!statsContainer || !this.data) {
      return;
    }

    const totalOrgs = this.getActiveOrganizations().length;
    const featuredOrgs = this.getFeaturedOrganizations().length;
    const categoriesCount = this.data.categories.length;

    statsContainer.innerHTML = `
      <div class="stats-grid">
        <div class="stat-item">
          <div class="stat-number">${totalOrgs}</div>
          <div class="stat-label">–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π</div>
        </div>
        <div class="stat-item">
          <div class="stat-number">${categoriesCount}</div>
          <div class="stat-label">–∫–∞—Ç–µ–≥–æ—Ä–∏–π</div>
        </div>
        <div class="stat-item">
          <div class="stat-number">${featuredOrgs}</div>
          <div class="stat-label">—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö</div>
        </div>
      </div>
    `;
  },

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ö–ª–µ–±–Ω—ã—Ö –∫—Ä–æ—à–µ–∫
  generateBreadcrumbs(organizationId) {
    const organization = this.getOrganization(organizationId);
    if (!organization) return '';

    const category = this.getCategory(organization.category);
    
    return `
      <nav class="breadcrumbs" aria-label="–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å–∞–π—Ç—É">
        <ol class="breadcrumbs__list">
          <li class="breadcrumbs__item">
            <a href="/website/" class="breadcrumbs__link">–ì–ª–∞–≤–Ω–∞—è</a>
          </li>
          <li class="breadcrumbs__item">
            <a href="/website/pages/organizations/" class="breadcrumbs__link">–°—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏</a>
          </li>
          ${category ? `
            <li class="breadcrumbs__item">
              <span class="breadcrumbs__text">${category.name}</span>
            </li>
          ` : ''}
          <li class="breadcrumbs__item">
            <span class="breadcrumbs__text">${organization.name}</span>
          </li>
        </ol>
      </nav>
    `;
  }
};

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof module !== 'undefined' && module.exports) {
  module.exports = OrganizationsManager;
}

// –ê–≤—Ç–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
  OrganizationsManager.init();
});

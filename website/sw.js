// ===== SERVICE WORKER –î–õ–Ø PWA –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–ò =====

const CACHE_NAME = 'rgau-guide-v1.2.0';
const STATIC_CACHE_NAME = 'rgau-guide-static-v1.2.0';
const DATA_CACHE_NAME = 'rgau-guide-data-v1.2.0';

// –§–∞–π–ª—ã –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ
const STATIC_FILES = [
  './',
  './index.html',
  './manifest.json',
  
  // CSS —Ñ–∞–π–ª—ã
  './css/styles.css',
  './css/header.css',
  './css/footer.css',
  './css/navigation.css',
  './css/cards.css',
  './css/timeline.css',
  './css/homepage.css',
  './css/pages.css',
  './css/responsive.css',
  './css/header-search.css',
  './css/pwa.css',
  
  // JavaScript —Ñ–∞–π–ª—ã
  './js/main.js',
  './js/utils.js',
  './js/navigation.js',
  './js/search.js',
  './js/search-modal.js',
  './js/animations.js',
  './js/timeline.js',
  './js/important-dates.js',
  './js/university-quiz.js',
  './js/seo-utils.js',
  './js/pwa.js',
  './js/data.js',
  
  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
  './components/header.html',
  './components/footer.html',
  './components/search.html',
  
  // –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  './pages/applicant-path/',
  './pages/applicant-path/index.html',
  './pages/university-life/',
  './pages/university-life/index.html',
  './pages/scholarships/',
  './pages/scholarships/index.html',
  './pages/organizations/',
  './pages/organizations/index.html',
  './pages/military/',
  './pages/military/index.html',
  './pages/self-government/',
  './pages/self-government/index.html',
  './pages/support/',
  './pages/support/index.html',
  
  // –î–∞–Ω–Ω—ã–µ
  './data/content.json',
  './data/search-index.json',
  
  // –û—Ñ–ª–∞–π–Ω —Å—Ç—Ä–∞–Ω–∏—Ü–∞
  './pages/offline.html'
];

// –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ –∑–∞–ø—Ä–æ—Å—É
const DYNAMIC_CACHE_PATTERNS = [
  /^\/pages\/.+\.html$/,
  /^\/css\/.+\.css$/,
  /^\/js\/.+\.js$/,
  /^\/images\/.+\.(png|jpg|jpeg|svg|webp|gif)$/,
  /^\/data\/.+\.json$/
];

// –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
const CACHE_STRATEGIES = {
  CACHE_FIRST: 'cache-first',
  NETWORK_FIRST: 'network-first',
  STALE_WHILE_REVALIDATE: 'stale-while-revalidate',
  NETWORK_ONLY: 'network-only',
  CACHE_ONLY: 'cache-only'
};

// ===== –£–°–¢–ê–ù–û–í–ö–ê SERVICE WORKER =====
self.addEventListener('install', event => {
  console.log('üîß Service Worker: –£—Å—Ç–∞–Ω–æ–≤–∫–∞...');
  
  event.waitUntil(
    Promise.all([
      // –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
      caches.open(STATIC_CACHE_NAME).then(cache => {
        console.log('üì¶ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤...');
        return cache.addAll(STATIC_FILES.map(url => new Request(url, {
          cache: 'reload'
        })));
      }),
      
      // –°–æ–∑–¥–∞–Ω–∏–µ –∫—ç—à–∞ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
      caches.open(DATA_CACHE_NAME),
      
      // –ü—Ä–æ–ø—É—Å–∫ –æ–∂–∏–¥–∞–Ω–∏—è
      self.skipWaiting()
    ])
  );
});

// ===== –ê–ö–¢–ò–í–ê–¶–ò–Ø SERVICE WORKER =====
self.addEventListener('activate', event => {
  console.log('‚úÖ Service Worker: –ê–∫—Ç–∏–≤–∞—Ü–∏—è...');
  
  event.waitUntil(
    Promise.all([
      // –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫—ç—à–µ–π
      caches.keys().then(cacheNames => {
        return Promise.all(
          cacheNames.map(cacheName => {
            if (cacheName !== STATIC_CACHE_NAME && 
                cacheName !== DATA_CACHE_NAME && 
                cacheName !== CACHE_NAME) {
              console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –∫—ç—à–∞:', cacheName);
              return caches.delete(cacheName);
            }
          })
        );
      }),
      
      // –ó–∞—Ö–≤–∞—Ç –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
      self.clients.claim()
    ])
  );
});

// ===== –û–ë–†–ê–ë–û–¢–ö–ê FETCH –ó–ê–ü–†–û–°–û–í =====
self.addEventListener('fetch', event => {
  const { request } = event;
  const url = new URL(request.url);
  
  // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º chrome-extension –∏ –Ω–µ-HTTP –∑–∞–ø—Ä–æ—Å—ã
  if (!url.protocol.startsWith('http')) {
    return;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API –∏ –¥–∞–Ω–Ω—ã–º
  if (url.pathname.includes('/data/') || url.pathname.includes('/api/')) {
    event.respondWith(handleDataRequest(request));
    return;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ HTML —Å—Ç—Ä–∞–Ω–∏—Ü
  if (request.destination === 'document') {
    event.respondWith(handleDocumentRequest(request));
    return;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
  if (request.destination === 'style' || 
      request.destination === 'script' || 
      request.destination === 'image') {
    event.respondWith(handleStaticRequest(request));
    return;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
  event.respondWith(handleGenericRequest(request));
});

// ===== –°–¢–†–ê–¢–ï–ì–ò–ò –ö–≠–®–ò–†–û–í–ê–ù–ò–Ø =====

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (HTML —Å—Ç—Ä–∞–Ω–∏—Ü)
async function handleDocumentRequest(request) {
  try {
    // –°–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ —Å–µ—Ç–∏
    const networkResponse = await fetch(request);
    
    if (networkResponse.ok) {
      // –ö—ç—à–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
      const cache = await caches.open(CACHE_NAME);
      cache.put(request, networkResponse.clone());
      return networkResponse;
    }
  } catch (error) {
    console.log('üåê –°–µ—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑ –∫—ç—à–∞...');
  }
  
  // –ï—Å–ª–∏ —Å–µ—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ –∫—ç—à–∞
  const cachedResponse = await caches.match(request);
  if (cachedResponse) {
    return cachedResponse;
  }
    // –ï—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–µ—Ç –≤ –∫—ç—à–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ñ–ª–∞–π–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—É
  return caches.match('./pages/offline.html') || 
         new Response('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–µ', {
           status: 503,
           statusText: 'Service Unavailable'
         });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
async function handleStaticRequest(request) {
  // Cache First —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –¥–ª—è —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
  const cachedResponse = await caches.match(request);
  if (cachedResponse) {
    return cachedResponse;
  }
  
  try {
    const networkResponse = await fetch(request);
    if (networkResponse.ok) {
      const cache = await caches.open(STATIC_CACHE_NAME);
      cache.put(request, networkResponse.clone());
      return networkResponse;
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ—Å—É—Ä—Å–∞:', request.url);
  }
  
  // Fallback –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  if (request.destination === 'image') {
    return new Response(
      '<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 100 100">' +
      '<rect width="100" height="100" fill="#f0f0f0"/>' +
      '<text x="50" y="50" text-anchor="middle" dy="0.3em" font-family="Arial" font-size="12" fill="#999">' +
      '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ' +
      '</text></svg>',
      { 
        headers: { 'Content-Type': 'image/svg+xml' },
        status: 200
      }
    );
  }
  
  return new Response('–†–µ—Å—É—Ä—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω', { status: 404 });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏ API –∑–∞–ø—Ä–æ—Å–æ–≤
async function handleDataRequest(request) {
  try {
    // Network First —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
    const networkResponse = await fetch(request);
    
    if (networkResponse.ok) {
      const cache = await caches.open(DATA_CACHE_NAME);
      cache.put(request, networkResponse.clone());
      return networkResponse;
    }
  } catch (error) {
    console.log('üåê –°–µ—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö, –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑ –∫—ç—à–∞...');
  }
  
  // –ï—Å–ª–∏ —Å–µ—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ –∫—ç—à–∞
  const cachedResponse = await caches.match(request);
  if (cachedResponse) {
    return cachedResponse;
  }
  
  // Fallback –¥–ª—è JSON –¥–∞–Ω–Ω—ã—Ö
  if (request.url.includes('.json')) {
    return new Response(JSON.stringify({
      error: '–î–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –≤ –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–µ',
      offline: true,
      timestamp: Date.now()
    }), {
      headers: { 'Content-Type': 'application/json' },
      status: 200
    });
  }
  
  return new Response('–î–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã', { status: 503 });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
async function handleGenericRequest(request) {
  // Stale While Revalidate —Å—Ç—Ä–∞—Ç–µ–≥–∏—è
  const cachedResponse = await caches.match(request);
  
  // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à
  const fetchPromise = fetch(request).then(networkResponse => {
    if (networkResponse.ok) {
      const cache = caches.open(CACHE_NAME);
      cache.then(c => c.put(request, networkResponse.clone()));
    }
    return networkResponse;
  }).catch(error => {
    console.log('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏:', error);
    return null;
  });
  
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é, –µ—Å–ª–∏ –µ—Å—Ç—å
  if (cachedResponse) {
    return cachedResponse;
  }
  
  // –ï—Å–ª–∏ –∫—ç—à–∞ –Ω–µ—Ç, –∂–¥–µ–º —Å–µ—Ç–µ–≤–æ–π –∑–∞–ø—Ä–æ—Å
  try {
    return await fetchPromise;
  } catch (error) {
    return new Response('–†–µ—Å—É—Ä—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω', { status: 503 });
  }
}

// ===== –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –°–û–ë–´–¢–ò–Ø =====

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞
self.addEventListener('message', event => {
  const { type, payload } = event.data;
  
  switch (type) {
    case 'SKIP_WAITING':
      self.skipWaiting();
      break;
      
    case 'GET_CACHE_INFO':
      getCacheInfo().then(info => {
        event.ports[0].postMessage({ type: 'CACHE_INFO', payload: info });
      });
      break;
      
    case 'CLEAR_CACHE':
      clearAllCaches().then(() => {
        event.ports[0].postMessage({ type: 'CACHE_CLEARED' });
      });
      break;
      
    case 'CACHE_PAGE':
      if (payload && payload.url) {
        cachePage(payload.url);
      }
      break;
  }
});

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫—ç—à–µ
async function getCacheInfo() {
  const cacheNames = await caches.keys();
  const info = {};
  
  for (const cacheName of cacheNames) {
    const cache = await caches.open(cacheName);
    const keys = await cache.keys();
    info[cacheName] = {
      count: keys.length,
      urls: keys.map(request => request.url)
    };
  }
  
  return info;
}

// –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∫—ç—à–µ–π
async function clearAllCaches() {
  const cacheNames = await caches.keys();
  await Promise.all(cacheNames.map(name => caches.delete(name)));
}

// –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
async function cachePage(url) {
  try {
    const cache = await caches.open(CACHE_NAME);
    await cache.add(url);
    console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–∫—ç—à–∏—Ä–æ–≤–∞–Ω–∞:', url);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', url, error);
  }
}

// –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
self.addEventListener('sync', event => {
  if (event.tag === 'background-sync') {
    event.waitUntil(performBackgroundSync());
  }
});

async function performBackgroundSync() {
  console.log('üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ–Ω–æ–≤–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...');
  
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
  // –ù–∞–ø—Ä–∏–º–µ—Ä, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—ç—à–∞ –≤–∞–∂–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
  const importantPages = [
    '/',
    '/pages/applicant-path/',
    '/pages/university-life/',
    '/pages/scholarships/'
  ];
  
  for (const page of importantPages) {
    try {
      await cachePage(page);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', page, error);
    }
  }
}

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ Service Worker
console.log('üöÄ Service Worker –†–ì–ê–£-–ú–°–•–ê Guide –∑–∞–ø—É—â–µ–Ω, –≤–µ—Ä—Å–∏—è:', CACHE_NAME);

// ===== SERVICE WORKER –î–õ–Ø PWA –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–ò =====

// –û–±–Ω–æ–≤–ª—è–µ–º –≤–µ—Ä—Å–∏–∏ –∫–µ—à–µ–π –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏
const CACHE_VERSION = '1.9.0'; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤–µ—Ä—Å–∏—é –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫—ç—à–∞
const CACHE_NAME = `rgau-guide-v${CACHE_VERSION}`;
const STATIC_CACHE_NAME = `rgau-guide-static-v${CACHE_VERSION}`;
const DATA_CACHE_NAME = `rgau-guide-data-v${CACHE_VERSION}`;

// –§–∞–π–ª—ã –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ (–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ –¥–ª—è –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü)
const STATIC_FILES = [
  './',
  './index.html',
  './manifest.json',
  '/website/',
  '/website/index.html', 
  '/website/manifest.json',
  
  // –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ CSS —Ñ–∞–π–ª—ã (–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ —Å—Ç—Ä–∞–Ω–∏—Ü)
  './css/styles.css',
  './css/header.css',
  './css/footer.css',
  './css/navigation.css',
  './css/homepage.css',
  './css/responsive.css',
  './css/pwa.css',
  './css/cards.css',
  './css/timeline.css',
  './css/pages.css',
  './css/forms.css',
  
  // –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ JavaScript —Ñ–∞–π–ª—ã
  './js/main.js',
  './js/utils.js',
  './js/navigation.js',
  './js/search.js',
  './js/search-modal.js',
  './js/pwa.js',
  './js/animations.js',
  './js/seo-utils.js',
  
  // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
  './components/header.html',
  './components/footer.html',
  './components/search.html',
  
  // –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  './data/content.json',
  './data/search-index.json',
  
  // –û—Ñ–ª–∞–π–Ω —Å—Ç—Ä–∞–Ω–∏—Ü–∞
  './pages/offline.html'
];

// –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ –∑–∞–ø—Ä–æ—Å—É
const DYNAMIC_CACHE_PATTERNS = [
  /^\/pages\/.+\.html$/,
  /^\/css\/.+\.css$/,
  /^\/js\/.+\.js$/,
  /^\/images\/.+\.(png|jpg|jpeg|svg|webp|gif)$/,
  /^\/data\/.+\.json$/
];

// –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
const CACHE_STRATEGIES = {
  CACHE_FIRST: 'cache-first',
  NETWORK_FIRST: 'network-first',
  STALE_WHILE_REVALIDATE: 'stale-while-revalidate',
  NETWORK_ONLY: 'network-only',
  CACHE_ONLY: 'cache-only'
};

// ===== –£–°–¢–ê–ù–û–í–ö–ê SERVICE WORKER =====
self.addEventListener('install', event => {
  console.log('üîß Service Worker: –£—Å—Ç–∞–Ω–æ–≤–∫–∞...');
  
  event.waitUntil(
    Promise.all([
      // –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
      caches.open(STATIC_CACHE_NAME).then(async cache => {
        console.log('üì¶ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤...');
        
        const cachePromises = STATIC_FILES.map(async url => {
          try {
            const request = new Request(url, { cache: 'reload' });
            const response = await fetch(request);
            
            if (response.ok) {
              await cache.put(request, response);
              console.log('‚úÖ –ö—ç—à–∏—Ä–æ–≤–∞–Ω:', url);
            } else {
              console.warn('‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω (–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω):', url, response.status);
            }
          } catch (error) {
            console.warn('‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω (–æ—à–∏–±–∫–∞):', url, error.message);
          }
        });
        
        await Promise.all(cachePromises);
        console.log('üì¶ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
      }),      // –°–æ–∑–¥–∞–Ω–∏–µ –∫—ç—à–∞ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
      caches.open(DATA_CACHE_NAME),
      
      // –ü—Ä–æ–ø—É—Å–∫ –æ–∂–∏–¥–∞–Ω–∏—è
      self.skipWaiting()
    ]).then(() => {
      console.log('‚úÖ SW —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º —Ñ–æ–Ω–æ–≤–æ–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ...');
      // –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤–æ–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
      backgroundCacheRemaining();
    })
  );
});

// ===== –ê–ö–¢–ò–í–ê–¶–ò–Ø SERVICE WORKER =====
self.addEventListener('activate', event => {
  console.log('‚úÖ Service Worker: –ê–∫—Ç–∏–≤–∞—Ü–∏—è...');
  
  event.waitUntil(
    Promise.all([
      // –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫—ç—à–µ–π
      caches.keys().then(cacheNames => {
        const currentCaches = [STATIC_CACHE_NAME, DATA_CACHE_NAME, CACHE_NAME];
        return Promise.all(
          cacheNames.map(cacheName => {
            if (!currentCaches.includes(cacheName)) {
              console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –∫—ç—à–∞:', cacheName);
              return caches.delete(cacheName);
            }
          })
        );
      }),
      
      // –ó–∞—Ö–≤–∞—Ç –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
      self.clients.claim()
    ])
  );
  
  console.log('üéØ Service Worker –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
});

// ===== –û–ë–†–ê–ë–û–¢–ö–ê FETCH –ó–ê–ü–†–û–°–û–í =====
self.addEventListener('fetch', event => {
  const { request } = event;
  const url = new URL(request.url);
  
  console.log('üîç SW Fetch –∑–∞–ø—Ä–æ—Å:', url.pathname, 'destination:', request.destination);
  
  // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º chrome-extension –∏ –Ω–µ-HTTP –∑–∞–ø—Ä–æ—Å—ã
  if (!url.protocol.startsWith('http')) {
    console.log('‚ö†Ô∏è –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –Ω–µ-HTTP –∑–∞–ø—Ä–æ—Å:', url.protocol);
    return;
  }
  
  // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º WebSocket –∑–∞–ø—Ä–æ—Å—ã –∏ DevTools
  if (url.pathname.includes('/ws') || url.pathname.includes('__vscode_')) {
    console.log('‚ö†Ô∏è –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º WS/DevTools –∑–∞–ø—Ä–æ—Å:', url.pathname);
    return;
  }  // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –∫ —Ä–µ—Å—É—Ä—Å–∞–º –∏–∑ —Å—Ç—Ä–∞–Ω–∏—Ü
  if (url.pathname.startsWith('/website/pages/')) {
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ —Ä–µ—Å—É—Ä—Å–∞–º, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞—é—Ç—Å—è –∏–∑ –ø–æ–¥—Å—Ç—Ä–∞–Ω–∏—Ü
    if (url.pathname.includes('/website/pages/manifest.json')) {
      console.log('‚ö†Ô∏è –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ manifest:', url.pathname, '‚Üí /website/manifest.json');
      const manifestUrl = new URL('/website/manifest.json', url.origin);
      const manifestRequest = new Request(manifestUrl, { 
        method: request.method,
        headers: request.headers,
        mode: request.mode,
        credentials: request.credentials,
        cache: request.cache,
        redirect: request.redirect
      });
      event.respondWith(handleStaticRequest(manifestRequest));
      return;
    }
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º, CSS, JS
    if (url.pathname.includes('/website/pages/images/') || 
        url.pathname.includes('/website/pages/css/') || 
        url.pathname.includes('/website/pages/js/')) {
      const correctPath = url.pathname.replace('/website/pages/', '/website/');
      console.log('‚ö†Ô∏è –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ —Ä–µ—Å—É—Ä—Å—É:', url.pathname, '‚Üí', correctPath);
      const correctUrl = new URL(correctPath, url.origin);
      const correctRequest = new Request(correctUrl, {
        method: request.method,
        headers: request.headers,
        mode: request.mode,
        credentials: request.credentials,
        cache: request.cache,
        redirect: request.redirect
      });
      event.respondWith(handleStaticRequest(correctRequest));
      return;
    }
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API –∏ –¥–∞–Ω–Ω—ã–º
  if (url.pathname.includes('/data/') || url.pathname.includes('/api/')) {
    event.respondWith(handleDataRequest(request));
    return;
  }
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ HTML —Å—Ç—Ä–∞–Ω–∏—Ü
  if (request.destination === 'document' || 
      (request.method === 'GET' && request.headers.get('accept')?.includes('text/html')) ||
      url.pathname.endsWith('/') || 
      url.pathname.endsWith('.html')) {
    console.log('üìÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º HTML –¥–æ–∫—É–º–µ–Ω—Ç:', url.pathname);
    event.respondWith(handleDocumentRequest(request));
    return;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
  if (request.destination === 'style' || 
      request.destination === 'script' || 
      request.destination === 'image') {
    event.respondWith(handleStaticRequest(request));
    return;
  }
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
  event.respondWith(handleGenericRequest(request));
});

// ===== –°–¢–†–ê–¢–ï–ì–ò–ò –ö–≠–®–ò–†–û–í–ê–ù–ò–Ø =====

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (HTML —Å—Ç—Ä–∞–Ω–∏—Ü)
async function handleDocumentRequest(request) {
  const url = new URL(request.url);
  
  // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ —Å–µ—Ç–∏
  try {
    const networkResponse = await fetch(request);
    
    if (networkResponse.ok) {
      // –ö—ç—à–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
      const cache = await caches.open(CACHE_NAME);
      cache.put(request, networkResponse.clone());
      return networkResponse;
    }
      // –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ –æ—à–∏–±–∫—É 404/500, –Ω–æ —Å–µ—Ç—å –µ—Å—Ç—å - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É
    if (networkResponse.status >= 400) {
      return networkResponse;
    }
    
  } catch (error) {
    console.log('üåê –°–µ—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è:', url.pathname);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
    const cachedResponse = await caches.match(request);
    if (cachedResponse) {
      console.log('üì¶ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑ –∫—ç—à–∞:', url.pathname);
      return cachedResponse;
    }
    
    // –ï—Å–ª–∏ —ç—Ç–æ –∑–∞–ø—Ä–æ—Å –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤ /pages/, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ñ–ª–∞–π–Ω
    if (url.pathname.includes('/pages/')) {
      console.log('üì° –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ñ–ª–∞–π–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è:', url.pathname);
      const offlinePage = await caches.match('./pages/offline.html');
      if (offlinePage) {
        return offlinePage;
      }
      return new Response('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–µ', {
        status: 503,
        statusText: 'Service Unavailable',
        headers: { 'Content-Type': 'text/html; charset=utf-8' }
      });
    }
  }
  
  // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤ –ø—Ä–æ–±—É–µ–º –∫—ç—à
  const cachedResponse = await caches.match(request);
  if (cachedResponse) {
    return cachedResponse;
  }
  
  // –ü–æ—Å–ª–µ–¥–Ω–∏–π fallback - –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
  try {
    const indexResponse = await caches.match('./index.html');
    if (indexResponse) {
      return indexResponse;
    }
  } catch (error) {
    // ignore
  }
  
  return new Response('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞', { status: 404 });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
async function handleStaticRequest(request) {
  const url = new URL(request.url);
  
  // –î–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ (JS, CSS –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤) –∏—Å–ø–æ–ª—å–∑—É–µ–º Network First
  const isCriticalFile = url.pathname.includes('/components/') || 
                         url.pathname.includes('/js/navigation.js') ||
                         url.pathname.includes('/js/main.js') ||
                         url.pathname.includes('/js/utils.js') ||
                         url.pathname.includes('/css/navigation.css') ||
                         url.pathname.includes('/css/header.css');
  
  if (isCriticalFile) {
    try {
      // Network First –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
      const networkResponse = await fetch(request);
      if (networkResponse.ok) {
        const cache = await caches.open(STATIC_CACHE_NAME);
        cache.put(request, networkResponse.clone());
        console.log('üîÑ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Ñ–∞–π–ª –æ–±–Ω–æ–≤–ª–µ–Ω –∏–∑ —Å–µ—Ç–∏:', url.pathname);
        return networkResponse;
      }
    } catch (error) {
      console.log('üåê –°–µ—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ñ–∞–π–ª–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–µ—à:', url.pathname);
    }
  }
  
  // Cache First —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
  const cachedResponse = await caches.match(request);
  if (cachedResponse && !isCriticalFile) {
    return cachedResponse;
  }
  
  try {
    const networkResponse = await fetch(request);
    if (networkResponse.ok) {
      const cache = await caches.open(STATIC_CACHE_NAME);
      cache.put(request, networkResponse.clone());
      return networkResponse;
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ—Å—É—Ä—Å–∞:', request.url);
  }
  
  // –ï—Å–ª–∏ –µ—Å—Ç—å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ñ–∞–π–ª–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë
  if (isCriticalFile && cachedResponse) {
    console.log('üì¶ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ñ–∞–π–ª–∞:', url.pathname);
    return cachedResponse;
  }
  
  // Fallback –¥–ª—è CSS —Ñ–∞–π–ª–æ–≤ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π CSS
  if (request.destination === 'style' || request.url.endsWith('.css')) {
    return new Response('/* CSS —Ñ–∞–π–ª –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–µ */', {
      headers: { 'Content-Type': 'text/css' },
      status: 200
    });
  }
  
  // Fallback –¥–ª—è JS —Ñ–∞–π–ª–æ–≤ - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç
  if (request.destination === 'script' || request.url.endsWith('.js')) {
    return new Response('console.log("JS —Ñ–∞–π–ª –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–µ");', {
      headers: { 'Content-Type': 'application/javascript' },
      status: 200
    });
  }
  
  // Fallback –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  if (request.destination === 'image') {
    return new Response(
      '<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 100 100">' +
      '<rect width="100" height="100" fill="#f0f0f0"/>' +
      '<text x="50" y="50" text-anchor="middle" dy="0.3em" font-family="Arial" font-size="12" fill="#999">' +
      '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ' +
      '</text></svg>',
      { 
        headers: { 'Content-Type': 'image/svg+xml' },
        status: 200
      }
    );
  }
  
  return new Response('–†–µ—Å—É—Ä—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω', { status: 404 });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏ API –∑–∞–ø—Ä–æ—Å–æ–≤
async function handleDataRequest(request) {
  try {
    // Network First —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
    const networkResponse = await fetch(request);
    
    if (networkResponse.ok) {
      const cache = await caches.open(DATA_CACHE_NAME);
      cache.put(request, networkResponse.clone());
      return networkResponse;
    }
  } catch (error) {
    console.log('üåê –°–µ—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö, –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑ –∫—ç—à–∞...');
  }
  
  // –ï—Å–ª–∏ —Å–µ—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ –∫—ç—à–∞
  const cachedResponse = await caches.match(request);
  if (cachedResponse) {
    return cachedResponse;
  }
  
  // Fallback –¥–ª—è JSON –¥–∞–Ω–Ω—ã—Ö
  if (request.url.includes('.json')) {
    return new Response(JSON.stringify({
      error: '–î–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –≤ –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–µ',
      offline: true,
      timestamp: Date.now()
    }), {
      headers: { 'Content-Type': 'application/json' },
      status: 200
    });
  }
  
  return new Response('–î–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã', { status: 503 });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
async function handleGenericRequest(request) {
  // Stale While Revalidate —Å—Ç—Ä–∞—Ç–µ–≥–∏—è
  const cachedResponse = await caches.match(request);
  
  try {
    // –ü–æ–ø—ã—Ç–∫–∞ —Å–µ—Ç–µ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    const networkResponse = await fetch(request);
    
    if (networkResponse.ok) {
      // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à
      const cache = await caches.open(CACHE_NAME);
      cache.put(request, networkResponse.clone());
      return networkResponse;
    }
    
    // –ï—Å–ª–∏ —Å–µ—Ç–µ–≤–æ–π –∑–∞–ø—Ä–æ—Å –Ω–µ—É—Å–ø–µ—à–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫—ç—à –∏–ª–∏ fallback
    if (cachedResponse) {
      return cachedResponse;
    }
    
    return new Response('–†–µ—Å—É—Ä—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω', { status: networkResponse.status });
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –¥–ª—è:', request.url);
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é, –µ—Å–ª–∏ –µ—Å—Ç—å
    if (cachedResponse) {
      return cachedResponse;
    }
    
    // –ï—Å–ª–∏ –∫—ç—à–∞ –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É
    return new Response('–†–µ—Å—É—Ä—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–µ', { status: 503 });
  }
}

// ===== –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –°–û–ë–´–¢–ò–Ø =====

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞
self.addEventListener('message', event => {
  const { type, payload } = event.data;
  
  switch (type) {
    case 'SKIP_WAITING':
      self.skipWaiting();
      break;
      
    case 'GET_CACHE_INFO':
      getCacheInfo().then(info => {
        event.ports[0].postMessage({ type: 'CACHE_INFO', payload: info });
      });
      break;
      
    case 'CLEAR_CACHE':
      clearAllCaches().then(() => {
        event.ports[0].postMessage({ type: 'CACHE_CLEARED' });
      });
      break;
      
    case 'CACHE_PAGE':
      if (payload && payload.url) {
        cachePage(payload.url);
      }
      break;
  }
});

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫—ç—à–µ
async function getCacheInfo() {
  const cacheNames = await caches.keys();
  const info = {};
  
  for (const cacheName of cacheNames) {
    const cache = await caches.open(cacheName);
    const keys = await cache.keys();
    info[cacheName] = {
      count: keys.length,
      urls: keys.map(request => request.url)
    };
  }
  
  return info;
}

// –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∫—ç—à–µ–π
async function clearAllCaches() {
  const cacheNames = await caches.keys();
  await Promise.all(cacheNames.map(name => caches.delete(name)));
}

// –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
async function cachePage(url) {
  try {
    const cache = await caches.open(CACHE_NAME);
    await cache.add(url);
    console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–∫—ç—à–∏—Ä–æ–≤–∞–Ω–∞:', url);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', url, error);
  }
}

// –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
self.addEventListener('sync', event => {
  if (event.tag === 'background-sync') {
    event.waitUntil(performBackgroundSync());
  }
});

async function performBackgroundSync() {
  console.log('üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ–Ω–æ–≤–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...');
  
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
  // –ù–∞–ø—Ä–∏–º–µ—Ä, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—ç—à–∞ –≤–∞–∂–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
  const importantPages = [
    '/',
    '/pages/applicant-path/',
    '/pages/university-life/',
    '/pages/scholarships/'
  ];
  
  for (const page of importantPages) {
    try {
      await cachePage(page);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', page, error);
    }
  }
}

// ===== –§–û–ù–û–í–û–ï –ö–≠–®–ò–†–û–í–ê–ù–ò–ï =====
async function backgroundCacheRemaining() {
  console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Ñ–æ–Ω–æ–≤–æ–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤...');
  
  // –£–≤–µ–¥–æ–º–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤ –æ –Ω–∞—á–∞–ª–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
  const clients = await self.clients.matchAll();
  clients.forEach(client => {
    client.postMessage({ type: 'BACKGROUND_CACHE_START' });
  });  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –æ—Ñ–ª–∞–π–Ω-—Ä–µ–∂–∏–º–∞
  const additionalResources = [
    // –û—Å—Ç–∞–ª—å–Ω—ã–µ CSS —Ñ–∞–π–ª—ã –¥–ª—è –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
    './css/university-life.css',
    './css/dormitory.css',
    './css/dormitory-settlement.css', 
    './css/academic-process.css',
    './css/infrastructure.css',
    './css/infrastructure-map.css',
    './css/scholarships.css',
    './css/standard-scholarship.css',
    './css/enhanced-scholarship.css',
    './css/other-benefits.css',
    './css/moscow-card.css',
    './css/military.css',
    './css/deferment.css',
    './css/vuc.css',
    './css/military-office.css',
    './css/self-government.css',
    './css/leader-requirements.css',
    './css/responsibilities.css',
    './css/adaptation.css',
    './css/enrollment.css',
    './css/faq.css',
    './css/header-search.css',
    
    // –û—Å—Ç–∞–ª—å–Ω—ã–µ JS —Ñ–∞–π–ª—ã
    './js/timeline.js',
    './js/data.js',
    './js/important-dates.js',
    './js/university-quiz.js',
    './js/scholarship-calculator.js',
    './js/dormitory-guide.js',
    './js/infrastructure-map.js',
      // –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã (—Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—É—Ç—è–º–∏)
    '/website/pages/applicant-path/',
    '/website/pages/applicant-path/index.html',
    '/website/pages/applicant-path/enrollment/',
    '/website/pages/applicant-path/enrollment/index.html',
    '/website/pages/applicant-path/adaptation/',
    '/website/pages/applicant-path/adaptation/index.html',
    '/website/pages/applicant-path/competitive-selection/',
    '/website/pages/applicant-path/competitive-selection/index.html',
    '/website/pages/applicant-path/dormitory-settlement/',
    '/website/pages/applicant-path/dormitory-settlement/index.html',
    '/website/pages/applicant-path/documents/',
    '/website/pages/applicant-path/documents/index.html',
    '/website/pages/university-life/',
    '/website/pages/university-life/index.html',
    '/website/pages/university-life/infrastructure/',
    '/website/pages/university-life/infrastructure/index.html',
    '/website/pages/university-life/dormitory/',
    '/website/pages/university-life/dormitory/index.html',
    '/website/pages/university-life/academic-process/',
    '/website/pages/university-life/academic-process/index.html',
    '/website/pages/scholarships/',
    '/website/pages/scholarships/index.html',
    '/website/pages/scholarships/standard/',
    '/website/pages/scholarships/standard/index.html',
    '/website/pages/scholarships/enhanced/',
    '/website/pages/scholarships/enhanced/index.html',
    '/website/pages/scholarships/other-benefits/',
    '/website/pages/scholarships/other-benefits/index.html',
    '/website/pages/scholarships/moscow-card/',
    '/website/pages/scholarships/moscow-card/index.html',
    '/website/pages/military/',
    '/website/pages/military/index.html',
    '/website/pages/military/deferment/',
    '/website/pages/military/deferment/index.html',
    '/website/pages/military/vuc/',
    '/website/pages/military/vuc/index.html',
    '/website/pages/military/military-office/',
    '/website/pages/military/military-office/index.html',
    '/website/pages/self-government/',
    '/website/pages/self-government/index.html',
    '/website/pages/self-government/leader-requirements/',
    '/website/pages/self-government/leader-requirements/index.html',
    '/website/pages/self-government/responsibilities/',
    '/website/pages/self-government/responsibilities/index.html',
    '/website/pages/support/faq/',
    '/website/pages/support/faq/index.html'
  ];
  
  const cache = await caches.open(STATIC_CACHE_NAME);
  let cached = 0;
  
  // –ö—ç—à–∏—Ä—É–µ–º –ø–æ –æ–¥–Ω–æ–º—É —Ñ–∞–π–ª—É —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º
  for (const resource of additionalResources) {
    try {
      const response = await fetch(resource);
      if (response.ok) {
        await cache.put(resource, response);
        cached++;
        console.log('üì¶ –§–æ–Ω–æ–≤–æ –∫—ç—à–∏—Ä–æ–≤–∞–Ω:', resource, `(${cached}/${additionalResources.length})`);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–ª–∏–µ–Ω—Ç–∞–º
        clients.forEach(client => {
          client.postMessage({ 
            type: 'CACHE_PROGRESS', 
            payload: { cached, total: additionalResources.length, current: resource }
          });
        });
      }
    } catch (error) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∫—ç—à–∏—Ä–æ–≤–∞—Ç—å:', resource);
    }
    
    // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    await new Promise(resolve => setTimeout(resolve, 200));
  }
  
  // –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
  clients.forEach(client => {
    client.postMessage({ type: 'CACHE_COMPLETE' });
  });
  
  console.log(`‚úÖ –§–æ–Ω–æ–≤–æ–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: ${cached}/${additionalResources.length} —Ñ–∞–π–ª–æ–≤`);
}

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ Service Worker
console.log('üöÄ Service Worker –†–ì–ê–£-–ú–°–•–ê Guide –∑–∞–ø—É—â–µ–Ω, –≤–µ—Ä—Å–∏—è:', CACHE_NAME);
